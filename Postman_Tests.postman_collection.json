{
	"info": {
		"_postman_id": "77d38b15-b79a-4c5b-9724-e9a70f104ca1",
		"name": "Postman Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test “All Issues” GET Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code 200 OK\", function() {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is arrays of issues\", function() {\r",
							"  const json = pm.response.json();\r",
							"  pm.expect(Array.isArray(json)).equals(true);\r",
							"  for (let item of json) {\r",
							"    pm.expect(typeof(item)).equals(\"object\");\r",
							"    pm.expect(typeof(item.id)).equals(\"number\");\r",
							"    pm.expect(typeof(item.title)).equals(\"string\");\r",
							"  }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "088e7d775b6a4ecaf7c1193f250300ad0acbfa91",
							"type": "string"
						},
						{
							"key": "username",
							"value": "qaTest",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/testnakov/test-nakov-repo/issues",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"testnakov",
						"test-nakov-repo",
						"issues"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test “Get Issue by Number” GET Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Issue By Number\", function() {\r",
							"  pm.response.to.have.status(200);\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json).to.be.an(\"object\");\r",
							"   // pm.expect(Number.isInteger(item.id)).equals(true);\r",
							"    //pm.expect(typeof(item.id)).equals(\"number\");\r",
							"    //pm.expect(typeof(item.number)).equals(\"number\");\r",
							"});\r",
							"\r",
							"  pm.test(\"Test for get issue with invalid id\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "088e7d775b6a4ecaf7c1193f250300ad0acbfa91",
							"type": "string"
						},
						{
							"key": "username",
							"value": "qaTest",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/testnakov/test-nakov-repo/issues/2062",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"testnakov",
						"test-nakov-repo",
						"issues",
						"2062"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test “Create New Issue” POST Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test for create new issue\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json).to.be.an(\"object\");\r",
							"    pm.expect(json.id).to.be.a(\"number\")\r",
							"    pm.expect(json.number).to.be.a(\"number\")\r",
							"});\r",
							"\r",
							"pm.test(\"Test for create new issue without Authorization header\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(401);\r",
							"}); \r",
							"\r",
							"pm.test(\"Test for create new issue with empty body\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.body);\r",
							"    pm.expect(pm.response.code).to.equal(422);\r",
							"}); \r",
							"\r",
							"pm.test(\"Test for create new issue with empty title\", function () {\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.title);\r",
							"    pm.expect(pm.response.code).to.equal(422);\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "088e7d775b6a4ecaf7c1193f250300ad0acbfa91",
							"type": "string"
						},
						{
							"key": "username",
							"value": "qaTest",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   //\"title\": \"Missing logo icon on home page\",\r\n    //\"body\":\"New logo is created.\",\r\n    \"labels\": [\"bug\", \"importance:critical, type:UI\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/testnakov/test-nakov-repo/issues",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"testnakov",
						"test-nakov-repo",
						"issues"
					]
				}
			},
			"response": []
		},
		{
			"name": "Test “Edit Existing Issue” PATCH Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test for edit issue\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"    const json = pm.response.json();\r",
							"    pm.expect(json).to.be.an(\"object\");\r",
							"    pm.expect(json.id).to.be.a(\"number\")\r",
							"    pm.expect(json.body).to.be.a(\"string\")\r",
							"});\r",
							"\r",
							"pm.test(\"Test for edit issue with invalid issue id\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Test for edit issue without Authorization header\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "088e7d775b6a4ecaf7c1193f250300ad0acbfa91",
							"type": "string"
						},
						{
							"key": "username",
							"value": "qaTest",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"body\":\"edited comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/testnakov/test-nakov-repo/issues/comments/7673471401",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"testnakov",
						"test-nakov-repo",
						"issues",
						"comments",
						"7673471401"
					]
				}
			},
			"response": []
		}
	]
}